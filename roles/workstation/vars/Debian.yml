---
path_for_scripts: /home/sf/skripts
path_for_dotfiles: /home/sf/.dotfiles

user_workstation: sf

# ~~~~~~SDKman vars~~~~~~

# Default user/group owner of the SDKMAN directory is determined by
# `ansible_user_id' and `ansible_user_gid', respectively.
# They can be overidden with the following variables.
sdkman_user: sf
sdkman_group: sf
# The directory in which to download the SDKMAN initialization script.
sdkman_tmp_dir: /tmp
# Validate SSL when downloading init script?
# This is different from `sdkman_insecure_ssl' (see below).
sdkman_validate_ssl: true

# vars file for ansible-sdkman
system_packages:
  - curl
  - debianutils
  - findutils
  - tar
  - unzip
  - zip

  # ~~~~~~Docker vars~~~~~~

# A list of users who will be added to the docker group.
docker_users: []

# Edition can be one of: 'ce' (Community Edition) or 'ee' (Enterprise Edition).
docker_edition: 'ce'
docker_package: "docker-{{ docker_edition }}"
docker_package_state: present

# Service options.
docker_service_state: started
docker_service_enabled: true
docker_restart_handler_state: restarted

# Used only for Debian/Ubuntu. Switch 'stable' to 'nightly' if needed.
docker_apt_release_channel: stable
docker_apt_arch: amd64
docker_apt_repository: "deb [arch={{ docker_apt_arch }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} {{ docker_apt_release_channel }}"
docker_apt_ignore_key_error: true
docker_apt_gpg_key: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg

# Used only for RedHat/CentOS/Fedora.
docker_yum_repo_url: https://download.docker.com/linux/{{ (ansible_distribution == "Fedora") | ternary("fedora","centos") }}/docker-{{ docker_edition }}.repo
docker_yum_repo_enable_nightly: '0'
docker_yum_repo_enable_test: '0'
docker_yum_gpg_key: https://download.docker.com/linux/centos/gpg

# ~~~~~~Sublime text vars~~~~~~

sublimetext_dl_source: "https://download.sublimetext.com"
sublimetext_build: 3126

sublimetext_arch: "{% if ansible_architecture == 'x86_64' %}amd64{% else %}i386{% endif %}"

# --- Debian vars ---
sublimetext_url_deb: "{{sublimetext_dl_source}}/sublime-text_build-{{sublimetext_build}}_{{sublimetext_arch}}.deb"
sublimetext_tmp_deb: "/tmp/{{sublimetext_build}}sublimetext.deb"

# --- MacOSX vars ---
sublimetext_url_dmg: "{{sublimetext_dl_source}}/Sublime%20Text%20Build%20{{sublimetext_build}}.dmg"
sublimetext_tmp_dmg: "/tmp/{{sublimetext_build}}sublimetext.dmg"
sublimetext_mount: "/Volumes/Sublime Text/"

# ~~~~~~Postgresql vars~~~~~~

# Basic settings
postgresql_version: 13
postgresql_encoding: "UTF-8"
postgresql_locale: "en_US.UTF-8"
postgresql_ctype: "en_US.UTF-8"

postgresql_admin_user: "postgres"
postgresql_default_auth_method: "peer"

postgresql_service_enabled: false # should the service be enabled, default is true

postgresql_cluster_name: "main"
postgresql_cluster_reset: false

# List of databases to be created (optional)
# Note: for more flexibility with extensions use the postgresql_database_extensions setting.
postgresql_databases:
  - name: foobar
    owner: baz          # optional; specify the owner of the database
    hstore: yes         # flag to install the hstore extension on this database (yes/no)
    uuid_ossp: yes      # flag to install the uuid-ossp extension on this database (yes/no)
    citext: yes         # flag to install the citext extension on this database (yes/no)
    encoding: "UTF-8"   # override global {{ postgresql_encoding }} variable per database
    state: "present"    # optional; one of 'present', 'absent', 'dump', 'restore'
    lc_collate: "en_GB.UTF-8"   # override global {{ postgresql_locale }} variable per database
    lc_ctype: "en_GB.UTF-8"     # override global {{ postgresql_ctype }} variable per database

# List of database extensions to be created (optional)
postgresql_database_extensions:
  - db: foobar
    extensions:
      - hstore
      - citext

# List of users to be created (optional)
postgresql_users:
  - name: baz
    pass: pass
    encrypted: yes  # if password should be encrypted, postgresql >= 10 does only accepts encrypted passwords
    state: "present"    # optional; one of 'present', 'absent'

# List of schemas to be created (optional)
postgresql_database_schemas:
  - database: foobar           # database name
    schema: acme               # schema name
    state: present

  - database: foobar           # database name
    schema: acme_baz           # schema name
    owner: baz                 # owner name
    state: present

# List of user privileges to be applied (optional)
postgresql_user_privileges:
  - name: baz                   # user name
    db: foobar                  # database
    priv: "ALL"                 # privilege string format: example: INSERT,UPDATE/table:SELECT/anothertable:ALL
    role_attr_flags: "CREATEDB" # role attribute flags
