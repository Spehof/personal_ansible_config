# Configuration file for gpg
## Owner Volkov Roman 
## volkovsws@gmail.com

## Info --------------------------------------------------------------------------------------------------------------------------

## pub — Публичный ключ.
## sub — Публичный подключ.
## sec — Секретный ключ.
## ssb — Секретный подключ.

## [SC] и [E] — Предназначение каждого ключа. Когда вы создаёте ключ, вы получаете аж 4 криптоключа: для шифрования, расшифровки, подписи и 
## проверки подписи:

## S — Подпись (Signing).
## C — Подпись ключа (Certification). Об этом пойдёт речь чуть позже.
## E — Шифрование (Encryption).
## A — Авторизация (Authentication). Может использоваться, например, в SSH.

## Configuration -------------------------------------------------------------------------------------------------------------------

## Формат вывода идентификатора ключа. У каждого ключа и подключа есть свой идентификатор. По умолчанию он не выводится, раньше выводилась его
## короткая версия.

## Доступные форматы:

## none — Не выводить (По умолчанию).
## short — Короткая запись.
## 0xshort — Короткая запись с префиксом "0x".
## long — Длинная запись.
## 0xlong — длинная запись с префиксом "0x".

keyid-format 0xlong

## Не включать информацию о ключе в зашифрованное сообщение. Эта опция может быть полезна для анонимизации получателя сообщения.

throw-keyids

## Не вставлять версию GPG в зашифрованное сообщение.

no-emit-version

## Убирает все комментарии из зашифрованного сообщения.

no-comments


## Всё это — опции, которые можно найти в man-странице. В файле конфигурации они записываются без префикса "--".

## Команды и опции:

## --armor
## -a — Создаёт ASCII (символьный) вывод. При шифровании GPG по умолчанию создаёт бинарный вывод. При использовании этой опции GPG кодирует 
## информацию кодировкой Radix-64 (Разновидность Base64). Этот текстовой вывод можно, например, отправить в мессенджере или по электронной 
## почте, а также вывести на экран.

## --encrypt
## -e — Зашифровать сообщение.

## --recipient
## -r — Указать ключ, который будет использоваться для шифрования. Можно использовать информацию идентификатор пользователя (имя, почта), 
## идентификатор ключа, отпечаток ключа. 

## --decrypt
## -d — Расшифровать сообщение.

## --sign
## -s — Подписать сообщение. Подпись при этом будет распологаться отдельно от самого сообщения.

## --clear-sign
## --clearsign — Подписать сообщение. Подпись при этом сохраняется вместе с сообщением.

## --local-user
## -u — Указать ключ, который будет использоваться для подписи. Схож с опцией --recipient, но это не одно и то же.

## --verify — Проверить подпись.

## --list-keys
## -k — Вывести список публичных ключей.

## --list-secret-keys
## -K — Вывести список приватных ключей.

## --export — экспортировать публичный ключ в файл, который потом можно куда нибудь отправить.

## --import — импортировать публичный ключ.

## --edit-key — Редактировать ключ.

## --expert — "Режим эксперта".


## Ключ редактируется командой gpg --edit-key <KeyID>
## Доступные команды вы можете узнать, введя help.

## Здесь мы можем добавить различные подключи, добавить идентификаторы пользователя, а также подписать чужие публичные ключи.
## Для чего нужно подписывать ключи? Так вы можете подтвердить то, что владелец подписываемого ключа является тем, за кого он себя выдаёт. 
## Таким образом вы создаёте так называемую "Сеть Доверия". 
## Пример: Алиса подписала публичный ключ Боба, а Боб подписал публичный ключ Чарли. 
## Если Алиса получит публичный ключ Чарли, она сможет ему доверять, потому что ключ подписан тем, кому Алиса доверяет, т.е. Бобом. 
## Для того, чтобы получить подписи для своего ключа, люди даже устраивают специальные встречи, 
## где они обмениваются своими публичными ключами и подписывают их.

## Сервер ключей — это специальный сервер, хранящий публичные ключи. Сервера ключей используются для распространения публичных ключей.

## Внимание! Ключи, отправленные на сервер ключей, невозможно удалить! Их можно только отозвать, импортировав сертификат отзыва на сервер, 
## при этом ключ всё равно остаётся на сервере.

## Отправить публичный ключ на сервер:
## gpg --keyserver <URL> --send-keys <KeyID>

## Получить публичный ключ с идентификатором ключа с сервера :
## gpg --keyserver <URL> --recv-keys <KeyID>

## Получить обновления ключей с сервера:
## gpg --keyserver <URL> --refresh-keys

## Найти ключ на сервере:
## gpg --keyserver <URL> --search-keys <UID или KeyID>

## Для удобства можно прописать адрес сервера ключей в gpg.conf, чтобы не прописывать его в командах:
## keyserver <URL>

## sec id 0xC50C32EEAD11136A
## usage: SC 

## ssb id 0x97947B6AC6D012A7
## usage: E

## pub 0xC50C32EEAD11136A
## usage: SC

## sub 0x97947B6AC6D012A7
## usage: E