---
# установка юзера и группы для SDK 
- name: software | sdkman/sdkman | set sdkman user/group vars
  set_fact:
    sdkman_user: '{{ sdkman_user | default(ansible_user_id) }}'
    sdkman_group: '{{ sdkman_group | default(ansible_user_gid) }}'
# утановка переменных 
# ansible_distribution
# ansible_os_family
- name: software | sdkman/sdkman | include system vars
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
        - default.yml
      paths:
        - vars
# установка необходимых пакетов из /vars/system_packages
- name: software | sdkman/sdkman | install system packages
  package:
    name: '{{ system_packages }}'
    use: '{{ ansible_pkg_mgr }}'
    state: present
  become: yes
  tags:
    - sdkman_privilege
# определение sdkman_user_home_dir
- name: software | sdkman/sdkman | determine sdkman user HOME directory
  shell: |
    set -o pipefail
    getent passwd {{ sdkman_user }} | cut -d: -f6
  args:
    executable: /bin/bash
  register: sdkman_user_home_dir
  changed_when: false
#установка sdkman_user_home_dir
- name: Set SDKMAN_DIR environment variable
  set_fact:
    sdkman_dir: '{{ sdkman_dir | default(sdkman_user_home_dir.stdout + "/.sdkman") }}'


- name: software | sdkman/sdkman | check for sdkman installation
  stat:
    path: '{{ sdkman_dir }}/bin/sdkman-init.sh'
  register: sdkman_init

# Install SDKMAN if not uninstalled
- block:
    - name: software | sdkman/sdkman | download sdkman
      get_url:
        url: https://get.sdkman.io
        dest: '{{ sdkman_tmp_dir }}/sdkman_script'
        owner: '{{ sdkman_user }}'
        group: '{{ sdkman_group }}'
        validate_certs: '{{ sdkman_validate_ssl }}'
# установка скрипта по временную директорию и запуск его
# создание домашней директории сдк
# нотификация очистки директории скриптов
    - name: software | sdkman/sdkman | run sdkman script
      environment:
        SDKMAN_DIR: '{{ sdkman_dir }}'
      command: /bin/bash {{ sdkman_tmp_dir }}/sdkman_script
      args:
        creates: '{{ sdkman_dir }}/bin/sdkman-init.sh'
      notify: Cleanup sdkman script

  when: not sdkman_init.stat.exists
  become: '{{ sdkman_user != ansible_user_id }}'
  become_user: '{{ sdkman_user }}'

- name: software | sdkman/sdkman | fix permissions on sdkman_dir
  file:
    path: '{{ sdkman_dir }}'
    state: directory
    owner: '{{ sdkman_user }}'
    group: '{{ sdkman_group }}'
    recurse: true
  become: yes
  tags:
    - sdkman_privilege